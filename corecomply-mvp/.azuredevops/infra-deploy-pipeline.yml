trigger:
  branches:
    include:
      - main
  paths:
    include:
      - infra/**

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: corecomply-infra-vars

stages:
  - stage: Plan
    displayName: 'Terraform Plan'
    jobs:
      - job: TerraformPlan
        displayName: 'Plan Infrastructure'
        steps:
          - task: TerraformInstaller@1
            displayName: 'Install Terraform'
            inputs:
              terraformVersion: '1.7.0'

          - task: TerraformTaskV4@4
            displayName: 'Terraform Init'
            inputs:
              provider: 'azurerm'
              command: 'init'
              workingDirectory: '$(System.DefaultWorkingDirectory)/infra/terraform'
              backendServiceArm: '$(ARM_SERVICE_CONNECTION)'
              backendAzureRmResourceGroupName: '$(TF_STATE_RG)'
              backendAzureRmStorageAccountName: '$(TF_STATE_STORAGE)'
              backendAzureRmContainerName: '$(TF_STATE_CONTAINER)'
              backendAzureRmKey: 'corecomply/infra.tfstate'

          - task: TerraformTaskV4@4
            displayName: 'Terraform Plan'
            inputs:
              provider: 'azurerm'
              command: 'plan'
              workingDirectory: '$(System.DefaultWorkingDirectory)/infra/terraform'
              commandOptions: '-out=tfplan'
              environmentServiceNameAzureRM: '$(ARM_SERVICE_CONNECTION)'

          - task: PublishPipelineArtifact@1
            displayName: 'Publish Plan'
            inputs:
              targetPath: '$(System.DefaultWorkingDirectory)/infra/terraform/tfplan'
              artifact: 'tfplan'

  - stage: Apply
    displayName: 'Terraform Apply'
    dependsOn: Plan
    condition: succeeded()
    jobs:
      - deployment: TerraformApply
        displayName: 'Apply Infrastructure'
        environment: 'production'
        strategy:
          runOnce:
            deploy:
              steps:
                - task: TerraformInstaller@1
                  displayName: 'Install Terraform'
                  inputs:
                    terraformVersion: '1.7.0'

                - task: DownloadPipelineArtifact@2
                  displayName: 'Download Plan'
                  inputs:
                    artifact: 'tfplan'
                    path: '$(System.DefaultWorkingDirectory)/infra/terraform'

                - task: TerraformTaskV4@4
                  displayName: 'Terraform Init'
                  inputs:
                    provider: 'azurerm'
                    command: 'init'
                    workingDirectory: '$(System.DefaultWorkingDirectory)/infra/terraform'
                    backendServiceArm: '$(ARM_SERVICE_CONNECTION)'
                    backendAzureRmResourceGroupName: '$(TF_STATE_RG)'
                    backendAzureRmStorageAccountName: '$(TF_STATE_STORAGE)'
                    backendAzureRmContainerName: '$(TF_STATE_CONTAINER)'
                    backendAzureRmKey: 'corecomply/infra.tfstate'

                - task: TerraformTaskV4@4
                  displayName: 'Terraform Apply'
                  inputs:
                    provider: 'azurerm'
                    command: 'apply'
                    workingDirectory: '$(System.DefaultWorkingDirectory)/infra/terraform'
                    commandOptions: 'tfplan'
                    environmentServiceNameAzureRM: '$(ARM_SERVICE_CONNECTION)'
