trigger:
  branches:
    include:
      - main
  paths:
    include:
      - web/**

pool:
  vmImage: 'ubuntu-latest'

variables:
  nodeVersion: '20.x'

stages:
  - stage: Build
    displayName: 'Build Web App'
    jobs:
      - job: BuildJob
        displayName: 'Build React App'
        steps:
          - task: NodeTool@0
            displayName: 'Install Node.js'
            inputs:
              versionSpec: $(nodeVersion)

          - script: |
              cd web
              npm ci
            displayName: 'Install dependencies'

          - script: |
              cd web
              npm run build
            displayName: 'Build application'
            env:
              VITE_AAD_CLIENT_ID: $(AAD_CLIENT_ID)
              VITE_AAD_TENANT_ID: $(AAD_TENANT_ID)
              VITE_API_BASE_URL: $(API_BASE_URL)

          - task: PublishPipelineArtifact@1
            displayName: 'Publish artifact'
            inputs:
              targetPath: '$(System.DefaultWorkingDirectory)/web/dist'
              artifact: 'web'

  - stage: Deploy
    displayName: 'Deploy Web App'
    dependsOn: Build
    condition: succeeded()
    jobs:
      - deployment: DeployJob
        displayName: 'Deploy to Azure Storage'
        environment: 'production'
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadPipelineArtifact@2
                  displayName: 'Download artifact'
                  inputs:
                    artifact: 'web'
                    path: '$(Pipeline.Workspace)/web'

                - task: AzureCLI@2
                  displayName: 'Deploy to Static Website'
                  inputs:
                    azureSubscription: '$(ARM_SERVICE_CONNECTION)'
                    scriptType: 'bash'
                    scriptLocation: 'inlineScript'
                    inlineScript: |
                      az storage blob upload-batch \
                        --account-name $(STORAGE_ACCOUNT_NAME) \
                        --source $(Pipeline.Workspace)/web \
                        --destination '$web' \
                        --auth-mode login \
                        --overwrite

                - task: AzureCLI@2
                  displayName: 'Purge CDN'
                  inputs:
                    azureSubscription: '$(ARM_SERVICE_CONNECTION)'
                    scriptType: 'bash'
                    scriptLocation: 'inlineScript'
                    inlineScript: |
                      az cdn endpoint purge \
                        --resource-group $(RESOURCE_GROUP_NAME) \
                        --profile-name $(CDN_PROFILE_NAME) \
                        --name $(CDN_ENDPOINT_NAME) \
                        --content-paths '/*'
